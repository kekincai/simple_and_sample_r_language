[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R语言入门",
    "section": "",
    "text": "前言\n这是一本关于R语言入门的小册子。"
  },
  {
    "objectID": "index.html#目录",
    "href": "index.html#目录",
    "title": "R语言入门",
    "section": "目录",
    "text": "目录\n\nR语言入门\n如何解题\n代码 & 脚本 & 项目 & 编程建议\n向量及其运算\nMatrix & Dataframe & List\n函数 & 程序流程控制\n数据导入 &导出\n数据可视化\n代码优化 & 并行"
  },
  {
    "objectID": "index.html#写作目的",
    "href": "index.html#写作目的",
    "title": "R语言入门",
    "section": "写作目的",
    "text": "写作目的\nR语言是一门非常实用且易于扩展的脚本语言。在数据分析中得到了广泛的应用。 这本小册子我想把工作中受到的严格训练总结出来分享给大家。\n本书基本上是介绍base R的用法，在可重复性研究上，使用基础的R语法会让后来人很方便的复现当时的结果。"
  },
  {
    "objectID": "index.html#本书代码执行环境",
    "href": "index.html#本书代码执行环境",
    "title": "R语言入门",
    "section": "本书代码执行环境",
    "text": "本书代码执行环境\n\n\n    machine  : arm64\n    platform : aarch64-apple-darwin20\n    version  : R version 4.3.1 (2023-06-16)\n               Beagle Scouts"
  },
  {
    "objectID": "01_R语言入门.html#r语言历史",
    "href": "01_R语言入门.html#r语言历史",
    "title": "1  R语言入门",
    "section": "1.1 R语言历史",
    "text": "1.1 R语言历史\nR语言的起源可以追溯到1976年，当时它是由新西兰的Ross Ihaka和Robert Gentleman在奥克兰大学开发的。它是S语言的一个实现，S语言是由贝尔实验室的John Chambers和同事们在1976年开发的。在R语言的源代码中还有很多S语言的留存代码，后面我们会时不时深入了解一下R语言的具体实现。\n\n\n\n\n\n\nNote\n\n\n\n不用担心，我们不必去学习其中的C语言和Fortran代码。\n\n\nR语言的名字来源于其创始人的名字首字母。\nR语言的开发是为了提供一个免费、开源的统计计算环境，它不仅仅是一个编程语言，还包括了一个高效的数据存储和处理工具，以及一套广泛的统计和图形功能。"
  },
  {
    "objectID": "01_R语言入门.html#谁在使用r语言",
    "href": "01_R语言入门.html#谁在使用r语言",
    "title": "1  R语言入门",
    "section": "1.2 谁在使用R语言",
    "text": "1.2 谁在使用R语言\nR语言在学术界和工业界都得到了广泛的应用。许多研究者使用R进行统计分析和数据可视化。在工业界，尤其是在金融、生物技术、市场研究和社交媒体领域，R语言也得到了广泛的应用。\n\n\n\n\n\n\nNote\n\n\n\n国内同学，尤其是学习生物、医学的同学可能有更深的体会。\n\n\n得益于它的易扩展性，大公司如Google, Facebook, Airbnb和New York Times都在使用R语言进行数据分析。此外，R语言的社区也非常活跃，有数千个扩展包，涵盖了从生态学到金融的各种领域。"
  },
  {
    "objectID": "01_R语言入门.html#为什么不用r语言",
    "href": "01_R语言入门.html#为什么不用r语言",
    "title": "1  R语言入门",
    "section": "1.3 为什么不用R语言",
    "text": "1.3 为什么不用R语言\n尽管R语言有很多优点，但它并不适合所有的应用场景。例如，对于大型的、实时的数据处理和分析，R可能不是最佳选择。此外，R语言主要是为统计计算和数据分析设计的，对于其他类型的应用，如网站开发或移动应用开发，R语言可能不是最佳选择。\n另外，R语言的学习曲线对于初学者来说可能有些陡峭，尤其是对于那些没有编程背景的人。"
  },
  {
    "objectID": "03_代码及其他.html#如何学好一门编程语言",
    "href": "03_代码及其他.html#如何学好一门编程语言",
    "title": "3  代码 & 脚本 & 项目",
    "section": "3.1 如何学好一门编程语言",
    "text": "3.1 如何学好一门编程语言\n学习编程语言不仅仅是学习语法和函数。更重要的是学习如何解决问题和如何有效地使用这门语言来实现你的目标。以下是一些建议：\n\n实践：编程是一种技能，需要通过实践来不断地提高。尝试做一些小项目，或者参与一些开源项目。\n理解基础：确保你理解了编程语言的基础概念，如变量、函数和控制结构。\n参与社区：加入相关的论坛和社区，与其他开发者交流，学习他们的经验和技巧。\n持续学习：技术是不断发展的，确保你始终保持与时俱进。\n\n最后，记住，学习编程是一个持续的旅程，不是一个目的地。享受这个过程，你会发现它是非常有趣和有益的。"
  },
  {
    "objectID": "01_R语言入门.html#为什么需要编程",
    "href": "01_R语言入门.html#为什么需要编程",
    "title": "1  R语言入门",
    "section": "1.3 为什么需要编程",
    "text": "1.3 为什么需要编程"
  },
  {
    "objectID": "01_R语言入门.html#如何解题",
    "href": "01_R语言入门.html#如何解题",
    "title": "1  R语言入门",
    "section": "1.4 如何解题",
    "text": "1.4 如何解题"
  }
]